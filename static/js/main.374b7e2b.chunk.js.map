{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","helper.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","cn","TodoList","todos","map","username","getNewId","todoIds","Math","max","getUserById","userId","users","find","fullTodos","usersFromServer","App","useState","setTodos","setTitle","setUserId","userError","setUserError","titleError","setTitleError","action","method","onSubmit","event","preventDefault","trim","newTodo","prev","type","placeholder","value","onChange","target","htmlFor","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.374b7e2b.chunk.js","sourcesContent":["import React from 'react';\n\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const { title, user, completed } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nexport function getNewId(todos: Todo[]) {\n  const todoIds = todos.map(todo => todo.id);\n  const maxId = Math.max(...todoIds);\n\n  return maxId + 1;\n}\n\nexport function getUserById(userId: number, users: User[]): User | null {\n  const foundUser = users.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { getNewId, getUserById } from './helper';\n\nconst fullTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId, usersFromServer),\n}));\n\nexport const App:React.FC = () => {\n  const [todos, setTodos] = useState(fullTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [userError, setUserError] = useState('');\n  const [titleError, setTitleError] = useState('');\n\n  const clearFormFields = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (titleError !== '') {\n      setTitleError('');\n    }\n\n    setTitle(event.target.value);\n  };\n\n  const handleUserChange = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    if (userError !== '') {\n      setUserError('');\n    }\n\n    setUserId(+event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!userId) {\n      setUserError('Please choose a user');\n    }\n\n    if (title.trim() === '') {\n      setTitleError('Please enter a title');\n    }\n\n    if (!userId || title.trim() === '') {\n      return;\n    }\n\n    const newTodo = {\n      id: getNewId(todos),\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId, usersFromServer),\n    };\n\n    setTodos((prev) => [...prev, newTodo]);\n    clearFormFields();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={handleTitleChange}\n          />\n\n          {titleError && <span className=\"error\">{titleError}</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">Select user</label>\n\n          <select\n            data-cy=\"userSelect\"\n            name=\"user\"\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {userError && <span className=\"error\">{userError}</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}